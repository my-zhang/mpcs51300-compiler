# lextab.py. This file automatically created by PLY (version 3.7). Don't edit!
_tabversion   = '3.5'
_lextokens    = set(['DO', 'DIVEQUAL', 'RETURN', 'WHILE', 'LSHIFT', 'EXTERN', 'RSHIFT', 'MINUS', 'STRING', 'LE', 'RPAREN', 'FCONST', 'SEMI', 'MODEQUAL', 'NE', 'SCONST', 'LT', 'PLUS', 'COMMA', 'GT', 'DIVIDE', 'FOR', 'PLUSPLUS', 'EQUALS', 'RBRACE', 'ELSE', 'PLUSEQUAL', 'GE', 'ICONST', 'LPAREN', 'MINUSMINUS', 'TIMES', 'EQ', 'ID', 'IF', 'LBRACE', 'INT', 'MINUSEQUAL', 'FLOAT', 'TIMESEQUAL', 'MOD'])
_lexreflags   = 0
_lexliterals  = ''
_lexstateinfo = {'INITIAL': 'inclusive'}
_lexstatere   = {'INITIAL': [('(?P<t_NEWLINE>\\n+)|(?P<t_ID>[A-Za-z_][\\w_]*)|(?P<t_comment> /\\*(.|\\n)*?\\*/)|(?P<t_preprocessor>\\#(.)*?\\n)|(?P<t_FCONST>((\\d+)(\\.\\d+)(e(\\+|-)?(\\d+))? | (\\d+)e(\\+|-)?(\\d+))([lL]|[fF])?)|(?P<t_ICONST>\\d+([uU]|[lL]|[uU][lL]|[lL][uU])?)|(?P<t_SCONST>\\"([^\\\\\\n]|(\\\\.))*?\\")|(?P<t_PLUSPLUS>\\+\\+)|(?P<t_TIMESEQUAL>\\*=)|(?P<t_PLUSEQUAL>\\+=)|(?P<t_LE><=)|(?P<t_RSHIFT>>>)|(?P<t_NE>!=)|(?P<t_RBRACE>\\})|(?P<t_MINUSEQUAL>-=)|(?P<t_EQ>==)|(?P<t_MINUSMINUS>--)|(?P<t_MODEQUAL>%=)|(?P<t_LPAREN>\\()|(?P<t_LBRACE>\\{)|(?P<t_DIVEQUAL>/=)|(?P<t_GE>>=)|(?P<t_RPAREN>\\))|(?P<t_LSHIFT><<)|(?P<t_TIMES>\\*)|(?P<t_PLUS>\\+)|(?P<t_LT><)|(?P<t_COMMA>,)|(?P<t_DIVIDE>/)|(?P<t_MOD>%)|(?P<t_SEMI>;)|(?P<t_MINUS>-)|(?P<t_EQUALS>=)|(?P<t_GT>>)', [None, ('t_NEWLINE', 'NEWLINE'), ('t_ID', 'ID'), ('t_comment', 'comment'), None, ('t_preprocessor', 'preprocessor'), None, (None, 'FCONST'), None, None, None, None, None, None, None, None, None, None, (None, 'ICONST'), None, (None, 'SCONST'), None, None, (None, 'PLUSPLUS'), (None, 'TIMESEQUAL'), (None, 'PLUSEQUAL'), (None, 'LE'), (None, 'RSHIFT'), (None, 'NE'), (None, 'RBRACE'), (None, 'MINUSEQUAL'), (None, 'EQ'), (None, 'MINUSMINUS'), (None, 'MODEQUAL'), (None, 'LPAREN'), (None, 'LBRACE'), (None, 'DIVEQUAL'), (None, 'GE'), (None, 'RPAREN'), (None, 'LSHIFT'), (None, 'TIMES'), (None, 'PLUS'), (None, 'LT'), (None, 'COMMA'), (None, 'DIVIDE'), (None, 'MOD'), (None, 'SEMI'), (None, 'MINUS'), (None, 'EQUALS'), (None, 'GT')])]}
_lexstateignore = {'INITIAL': ' \t\x0c'}
_lexstateerrorf = {'INITIAL': 't_error'}
_lexstateeoff = {}
